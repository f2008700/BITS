module half_adder(S,C,x,y);
	output S,C;
	input x,y;
	
	xor(S,x,y);
	and(C,x,y);

endmodule

module full_adder(S,C,x,y,Cin);
	output S,C;
	input x,y,Cin;
	wire S1,C1,C2;
	
	half_adder H1(S1,C1,x,y);
	half_adder H2(S,C2,S1,Cin);
	
	or O1(C,C1,C2);

endmodule


module t_full_adder;
	wire S,C;
	reg x,y,Cin;

	full_adder(S,C,x,y,Cin);
	
	initial # 40 $finish;
	
	initial begin 
		x=0; y=0; Cin=0;
		#5 x=0; y=1; Cin=0; 
		#5 x=1; y=0; Cin=0;
		#5 x=1; y=1; Cin=0;
		#5 x=0; y=1; Cin=1;
		#5 x=1; y=1; Cin=1;
	end 

endmodule		
